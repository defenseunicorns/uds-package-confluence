apiVersion: uds.dev/v1alpha1
kind: Package
metadata:
  name: confluence
  namespace: {{ .Release.Namespace }}
spec:
  {{- if .Values.sso.enabled }}
  sso:
    - name: Confluence Login
    {{- if eq .Values.sso.protocol "saml" }}
      clientId: "https://confluence.{{ .Values.domain }}"
      protocol: saml
      secretName: sso-client-uds-package-confluence-saml

      redirectUris:
        - "https://confluence.{{ .Values.domain }}/plugins/servlet/samlconsumer"

      defaultClientScopes:
        - "mapper-saml-email-email"
        - "mapper-saml-firstname-first_name"
        - "mapper-saml-lastname-last_name"
        - "mapper-saml-username-name"
      protocolMappers:
      - name: Group list
        protocol: saml
        consentRequired: false
        protocolMapper: "saml-group-membership-mapper"
        config:
          single: "true"
          attribute.nameformat: "Basic"
          full.path: "true"
          friendly.name: "Groups"
          attribute.name: "groups"
      attributes:
        saml.client.signature: "false"
        saml_assertion_consumer_url_post: "https://confluence.{{ .Values.domain }}/plugins/servlet/samlconsumer"
        saml.assertion.signature: "true"
    {{- else if eq .Values.sso.protocol "openid_connect"  }}
      clientId: uds-package-confluence-openid-connect
      protocol: openid-connect

      redirectUris:
        - "https://confluence.{{ .Values.domain }}/plugins/servlet/oidc/callback"
    {{- end }}
  {{- end }}

  monitor:
    - selector:
        app.kubernetes.io/name: confluence
      targetPort: 9999
      portName: jmx
      path: /metrics
      description: Metrics

  network:
    expose:
      - service: confluence
        selector:
          app.kubernetes.io/name: confluence
        gateway: tenant
        host: confluence
        port: 80
        targetPort: 8090
    allow:
      - direction: Ingress
        remoteGenerated: IntraNamespace

      - direction: Egress
        remoteGenerated: IntraNamespace

      - direction: Egress
        remoteNamespace: keycloak
        remoteSelector:
          app.kubernetes.io/name: keycloak
        selector:
          app.kubernetes.io/name: confluence
        port: 8080
        description: "SSO Internal"

      - direction: Egress
        remoteGenerated: Anywhere
        selector:
          app.kubernetes.io/name: confluence
        port: 443
        description: "SSO External"

      - direction: Egress
        selector:
          app.kubernetes.io/name: confluence
        {{- if .Values.postgres.internal }}
        remoteNamespace: {{ .Values.postgres.namespace | quote }}
        remoteSelector:
          {{ .Values.postgres.selector | toYaml | nindent 10 }}
        port: {{ .Values.postgres.port }}
        {{- else }}
        remoteGenerated: Anywhere
        {{- end }}
        description: "Confluence Postgres"

      # Custom rules for unanticipated scenarios
      {{- range .Values.custom }}
      - direction: {{ .direction }}
        selector:
          {{ .selector | toYaml | nindent 10 }}
        {{- if not .remoteGenerated }}
        remoteNamespace: {{ .remoteNamespace }}
        remoteSelector:
          {{ .remoteSelector | toYaml | nindent 10 }}
        port: {{ .port }}
        {{- else }}
        remoteGenerated: {{ .remoteGenerated }}
        {{- end }}
        description: {{ .description }}
      {{- end }}
