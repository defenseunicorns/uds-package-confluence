# Copyright 2024 Defense Unicorns
# SPDX-License-Identifier: AGPL-3.0-or-later OR LicenseRef-Defense-Unicorns-Commercial

database:
  type: postgresql
  url: "jdbc:postgresql://###ZARF_VAR_CONFLUENCE_DB_ENDPOINT###:5432/###ZARF_VAR_CONFLUENCE_DB_NAME###"
  driver: org.postgresql.Driver
  credentials:
    secretName: confluence-postgres
    usernameSecretKey: username
    passwordSecretKey: password

monitoring:
  exposeJmxMetrics: true
  jmxExporterInitContainer:
    runAsRoot: false

volumes:
  localHome:
    persistentVolumeClaim:
      create: true
      # storageClassName: your-storage-class-here
      resources:
        requests:
          storage: 10Gi
  sharedHome:
    persistentVolumeClaim:
      create: true
      accessModes:
        - ReadWriteOnce
    nfsPermissionFixer:
      enabled: false
  synchronyHome:
    persistentVolumeClaim:
      create: true

ingress:
  nginx: false

serviceAccount:
  create: true
  name: confluence
  role:
    create: true

   # Define permissions
   # https://kubernetes.io/docs/reference/access-authn-authz/rbac/#role-and-clusterrole
   #
  clusterRole:

    # -- Set to 'true' if a ClusterRole should be created, or 'false' if it
    # already exists.
    #
    create: true

    # -- The name of the ClusterRole to be used. If not specified, but
    # the "serviceAccount.clusterRole.create" flag is set to 'true',
    # then the ClusterRole name will be auto-generated.
    #
    name: confluence

confluence:
  service:
    type: ClusterIP  # Use this whether doing a standalone server or a clustered setup
    sessionAffinity: None  # Change this to `ClientIP` if clustering is enabled and Istio injection is not enabled and no other system exists to provide sticky sessions
  hazelcastService:
    enabled: false  # If clustering, make true
  clustering:
    enabled: false  # If clustering, make true
  tomcatConfig:
    generateByHelm: true
  seraphConfig:
    generateByHelm: true
  resources:
    container:
      requests:
        cpu: "500m"
        memory: "3Gi"
      limits:
        cpu: "4"
        memory: "8Gi"
    jvm:
      minHeap: "2g"
      maxHeap: "6g" # https://www.alibabacloud.com/help/en/sae/use-cases/best-practices-for-jvm-heap-size-configuration#:~:text=No%2C%20you%20cannot%20set%20the,sufficient%20memory%20for%20system%20components.

  securityContext:
    fsGroup: 2002
    runAsNonRoot: true
    runAsUser: 2002
    runAsGroup: 2002
  containerSecurityContext:
    runAsNonRoot: true
    allowPrivilegeEscalation: false
    capabilities:
      drop:
        - ALL
    runAsUser: 2002
    runAsGroup: 2002

  # If clustering, do not add replicas until after node-0 is fully configured (you're through the setup wizard, able to create pages).
  # Then add them one at a time. See docs/clustering.md for more information.
  replicaCount: 1

  # At minimum we support v1.2, may change to support only v1.3: https://github.com/defenseunicorns/uds-core/blob/main/src/istio/chart/values.yaml#L28
  additionalJvmArgs:
    # Prevent TLS reduction to v1.1
    - "-Dhttps.protocols=TLSv1.2,TLSv1.3"
    # These additional Args avoid warnings from Hazelcast.
    - "--add-modules java.se"
    - "--add-exports java.base/jdk.internal.ref=ALL-UNNAMED"
    - "--add-opens java.base/java.lang=ALL-UNNAMED"
    - "--add-opens java.base/java.nio=ALL-UNNAMED"
    - "--add-opens java.base/sun.nio.ch=ALL-UNNAMED"
    - "--add-opens java.management/sun.management=ALL-UNNAMED"
    - "--add-opens jdk.management/com.sun.management.internal=ALL-UNNAMED"

synchrony:
  enabled: false # Enable for collaborative editing
  securityContext:
    runAsUser: 2002
    runAsGroup: 2002
    runAsNonRoot: true
    fsGroup: 2002

# This allows for clustering to work
podAnnotations:
  traffic.sidecar.istio.io/excludeOutboundPorts: 5801,5701,25500,54327
  traffic.sidecar.istio.io/excludeInboundPorts: 5801,5701,25500,54327
